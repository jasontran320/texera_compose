akka {
    # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
    # to STDOUT)
    loggers = ["akka.event.slf4j.Slf4jLogger"]

    # Log level used by the configured loggers (see "loggers") as soon
    # as they have been started; before that, see "stdout-loglevel"
    # Options: OFF, ERROR, WARNING, INFO, DEBUG
    loglevel = "INFO"

    # Log level for the very basic logger activated during ActorSystem startup.
    # This logger prints the log messages to stdout (System.out).
    # Options: OFF, ERROR, WARNING, INFO, DEBUG
    stdout-loglevel = "INFO"

    # Filter of log events that is used by the LoggingAdapter before
    # publishing log events to the eventStream.
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

    actor {
        provider = cluster
        enable-additional-serialization-bindings = on
        allow-java-serialization = off
        serializers {
            kryo = "com.twitter.chill.akka.AkkaSerializer"
        }
        serialization-bindings {
            "java.io.Serializable" = kryo
            "java.lang.Throwable" = akka-misc
        }
    }

    remote {
        artery {
            transport = tcp
            canonical.hostname = "0.0.0.0"
            canonical.port = 0
            advanced.maximum-frame-size = 30 MiB
            advanced.maximum-large-frame-size = 120 MiB
        }
    }
    cluster {
        seed-nodes = []

        # auto downing is NOT safe for production deployments.
        # you may want to use it during development, read more about it in the docs.
        auto-down-unreachable-after = off
        downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
        unreachable-nodes-reaper-interval = 5s
        gossip-interval = 10s
        leader-actions-interval = 10s
        gossip-time-to-live = 20s

        failure-detector {
            heartbeat-interval = 10s
            acceptable-heartbeat-pause = 50s
            expected-response-after = 30s
        }
    }
}
