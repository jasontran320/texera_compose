// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package edu.uci.ics.texera.web.workflowcachestate

sealed abstract class CacheState(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = CacheState
  def isValid: _root_.scala.Boolean = false
  def isInvalid: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[CacheState] = edu.uci.ics.texera.web.workflowcachestate.CacheState
  final def asRecognized: _root_.scala.Option[edu.uci.ics.texera.web.workflowcachestate.CacheState.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[edu.uci.ics.texera.web.workflowcachestate.CacheState.Recognized])
}

object CacheState extends _root_.scalapb.GeneratedEnumCompanion[CacheState] {
  sealed trait Recognized extends CacheState
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[CacheState] = this
  @SerialVersionUID(0L)
  case object VALID extends CacheState(0) with CacheState.Recognized {
    val index = 0
    val name = "VALID"
    override def isValid: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object INVALID extends CacheState(1) with CacheState.Recognized {
    val index = 1
    val name = "INVALID"
    override def isInvalid: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends CacheState(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  
  lazy val values = scala.collection.immutable.Seq(VALID, INVALID)
  def fromValue(__value: _root_.scala.Int): CacheState = __value match {
    case 0 => VALID
    case 1 => INVALID
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = WorkflowcachestateProto.javaDescriptor.getEnumTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = WorkflowcachestateProto.scalaDescriptor.enums(0)
}