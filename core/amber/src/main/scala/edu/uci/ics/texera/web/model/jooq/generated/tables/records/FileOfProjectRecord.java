/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated.tables.records;


import edu.uci.ics.texera.web.model.jooq.generated.tables.FileOfProject;
import edu.uci.ics.texera.web.model.jooq.generated.tables.interfaces.IFileOfProject;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileOfProjectRecord extends UpdatableRecordImpl<FileOfProjectRecord> implements Record2<UInteger, UInteger>, IFileOfProject {

    private static final long serialVersionUID = 184878485;

    /**
     * Setter for <code>texera_db.file_of_project.fid</code>.
     */
    @Override
    public void setFid(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>texera_db.file_of_project.fid</code>.
     */
    @Override
    public UInteger getFid() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>texera_db.file_of_project.pid</code>.
     */
    @Override
    public void setPid(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>texera_db.file_of_project.pid</code>.
     */
    @Override
    public UInteger getPid() {
        return (UInteger) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UInteger, UInteger> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UInteger, UInteger> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UInteger, UInteger> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return FileOfProject.FILE_OF_PROJECT.FID;
    }

    @Override
    public Field<UInteger> field2() {
        return FileOfProject.FILE_OF_PROJECT.PID;
    }

    @Override
    public UInteger component1() {
        return getFid();
    }

    @Override
    public UInteger component2() {
        return getPid();
    }

    @Override
    public UInteger value1() {
        return getFid();
    }

    @Override
    public UInteger value2() {
        return getPid();
    }

    @Override
    public FileOfProjectRecord value1(UInteger value) {
        setFid(value);
        return this;
    }

    @Override
    public FileOfProjectRecord value2(UInteger value) {
        setPid(value);
        return this;
    }

    @Override
    public FileOfProjectRecord values(UInteger value1, UInteger value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFileOfProject from) {
        setFid(from.getFid());
        setPid(from.getPid());
    }

    @Override
    public <E extends IFileOfProject> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FileOfProjectRecord
     */
    public FileOfProjectRecord() {
        super(FileOfProject.FILE_OF_PROJECT);
    }

    /**
     * Create a detached, initialised FileOfProjectRecord
     */
    public FileOfProjectRecord(UInteger fid, UInteger pid) {
        super(FileOfProject.FILE_OF_PROJECT);

        set(0, fid);
        set(1, pid);
    }
}
